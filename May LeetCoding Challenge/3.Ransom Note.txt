Ransom Note
Solution
Given an arbitrary ransom note string and another string containing letters from all the magazines, write a function that will return true if the ransom note can be constructed from the magazines ; otherwise, it will return false.

Each letter in the magazine string can only be used once in your ransom note.

Note:
You may assume that both strings contain only lowercase letters.

canConstruct("a", "b") -> false
canConstruct("aa", "ab") -> false
canConstruct("aa", "aab") -> true

Solution:

i)Best Solution
class Solution {
    public boolean canConstruct(String ransom, String magazine) {
        if (magazine.length() < ransom.length()) return false;
        int caps[] = new int[26];
        for (char c : ransom.toCharArray()) {
            int index = magazine.indexOf(c, caps[c - 'a']);
            if (index == -1)
                return false;
            caps[c - 97] = index + 1;
        }
        return true;
    }
}


ii)
class Solution {
    private static final int R = 26;
    
    public boolean canConstruct(String ransomNote, String magazine) {
        int[] pool = new int[R];
        
        for (char c : ransomNote.toCharArray()) pool[c - 'a'] -= 1;
        
        for (char c : magazine.toCharArray()) pool[c - 'a'] += 1;
        
        for (int i = 0; i < R; i += 1) if (pool[i] < 0) return false;
        
        return true;
    }
}


iii)
class Solution {
    public boolean canConstruct(String ransomNote, String magazine) {
        
        int array[]=new int[26];
        for(int i=0;i<ransomNote.length();i++){
            array[ransomNote.charAt(i)-'a']+=1;
        }
        int array2[]=new int[26];
        for(int i=0;i<magazine.length();i++){
            array2[magazine.charAt(i)-'a']+=1;
        }
        for(int i=0;i<26;i++){
            if(array[i]>array2[i]){
                return false;
            }
        }
        return true;
        }
        
}



What i learn from this:
if we use charArray insted of charAt() then our code will take less time to execute so i will try to use charArray insted of charAt()