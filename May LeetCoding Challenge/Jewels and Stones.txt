Jewels and Stones
Solution
You're given strings J representing the types of stones that are jewels, and S representing the stones you have.  Each character in S is a type of stone you have.  You want to know how many of the stones you have are also jewels.

The letters in J are guaranteed distinct, and all characters in J and S are letters. Letters are case sensitive, so "a" is considered a different type of stone from "A".

Example 1:

Input: J = "aA", S = "aAAbbbb"
Output: 3
Example 2:

Input: J = "z", S = "ZZ"
Output: 0
Note:

S and J will consist of letters and have length at most 50.
The characters in J are distinct.

Solution:

i)Brute Force:
class Solution {
    public int numJewelsInStones(String J, String S) {
        int ans=0;
        for(int i=0;i<S.length();i++){
            if(J.contains(S.substring(i,i+1))){
                ans++;
            }
        }
        return ans;
        
    }
}


ii)Convert to char array and then compare
class Solution {
 public int numJewelsInStones(String J, String S) {
     if (J == null || J.length() == 0) {
            return 0;
        }
        int count = 0;
        
        char s[]=S.toCharArray();
        char j[]=J.toCharArray();
        for (Character c : s) {
            for (Character m : j) {
                if (m == c) {
                    count++;
                    break;
                }
            }
        }
        return count;
 }
}


