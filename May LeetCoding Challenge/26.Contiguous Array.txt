Contiguous Array
Solution
Given a binary array, find the maximum length of a contiguous subarray with equal number of 0 and 1.

Example 1:
Input: [0,1]
Output: 2
Explanation: [0, 1] is the longest contiguous subarray with equal number of 0 and 1.
Example 2:
Input: [0,1,0]
Output: 2
Explanation: [0, 1] (or [1, 0]) is a longest contiguous subarray with equal number of 0 and 1.
Note: The length of the given binary array will not exceed 50,000.








class Solution {
    public int findMaxLength(int[] nums) {
     int len=nums.length;
        for(int i=0;i<len;i++){
            if(nums[i]==0)
                nums[i]=-1;
        }
        HashMap<Integer,Integer> map=new HashMap<>();
        map.put(0,-1);
        int sum=0;
        int ans=0;
        for(int i=0;i<len;i++){
            sum+=nums[i];
            if(sum==0)
                ans=i+1;

            if(map.containsKey(sum)){
                ans=Math.max(ans,i-map.get(sum));
            }else {
                map.put(sum, i);
            }
        }
        return ans;
        
    }
}